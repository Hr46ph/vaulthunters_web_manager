"""
VaultHunters Web Manager Configuration Template

Copy this file to config.py and customize the settings for your environment.
DO NOT commit config.py to version control - it contains environment-specific settings.
"""

import os
from datetime import timedelta

class Config:
    # Server paths - adjust these to match your setup
    MINECRAFT_SERVER_PATH = os.environ.get('MINECRAFT_SERVER_PATH', '/home/minecraft/vaulthunters')
    BACKUP_PATH = os.environ.get('BACKUP_PATH', '/home/minecraft/backups')
    
    # Java and server settings for direct process management
    JAVA_EXECUTABLE = os.environ.get('JAVA_EXECUTABLE', 'java')
    SERVER_JAR = os.environ.get('SERVER_JAR', 'forge-1.18.2-40.2.21-universal.jar')
    
    # Java JVM arguments - optimized for VaultHunters (Aikar's flags)
    JAVA_ARGS = [
        '-Xmx8G', '-Xms4G',  # Adjust memory allocation as needed
        '-XX:+UseG1GC',
        '-XX:+ParallelRefProcEnabled',
        '-XX:MaxGCPauseMillis=200',
        '-XX:+UnlockExperimentalVMOptions',
        '-XX:+DisableExplicitGC',
        '-XX:+AlwaysPreTouch',
        '-XX:G1NewSizePercent=30',
        '-XX:G1MaxNewSizePercent=40',
        '-XX:G1HeapRegionSize=8M',
        '-XX:G1ReservePercent=20',
        '-XX:G1HeapWastePercent=5',
        '-XX:G1MixedGCCountTarget=4',
        '-XX:InitiatingHeapOccupancyPercent=15',
        '-XX:G1MixedGCLiveThresholdPercent=90',
        '-XX:G1RSetUpdatingPauseTimePercent=5',
        '-XX:SurvivorRatio=32',
        '-XX:+PerfDisableSharedMem',
        '-XX:MaxTenuringThreshold=1',
        '-Dusing.aikars.flags=https://mcflags.emc.gs',
        '-Daikars.new.flags=true'
    ]
    
    # Minecraft server connection settings (server.properties values are read automatically)
    MINECRAFT_SERVER_HOST = os.environ.get('MINECRAFT_SERVER_HOST', 'localhost')
    MINECRAFT_SERVER_PORT = int(os.environ.get('MINECRAFT_SERVER_PORT', 25565))
    
    # Legacy settings (kept for compatibility, no longer used for process management)
    SERVICE_NAME = os.environ.get('SERVICE_NAME', 'vaulthunters')
    
    # Web interface settings
    HOST = os.environ.get('HOST', '0.0.0.0')
    PORT = int(os.environ.get('PORT', 8080))
    SECRET_KEY = os.environ.get('SECRET_KEY', 'change-this-to-a-random-secret-key')
    
    # Flask settings
    DEBUG = os.environ.get('DEBUG', 'False').lower() == 'true'
    TESTING = False
    
    # Session configuration
    PERMANENT_SESSION_LIFETIME = timedelta(hours=24)
    SESSION_COOKIE_SECURE = False  # Set to True when using HTTPS
    SESSION_COOKIE_HTTPONLY = True
    SESSION_COOKIE_SAMESITE = 'Lax'
    
    # CSRF Protection
    WTF_CSRF_ENABLED = True
    WTF_CSRF_TIME_LIMIT = 3600  # 1 hour
    
    # File upload settings
    MAX_CONTENT_LENGTH = 16 * 1024 * 1024  # 16MB max file size
    
    # Log file paths (relative to MINECRAFT_SERVER_PATH)
    LOG_FILES = {
        'server': 'logs/latest.log',
        'debug': 'logs/debug.log',
        'crash': 'crash-reports',
    }
    
    # Config files that can be edited (relative to MINECRAFT_SERVER_PATH)
    EDITABLE_CONFIGS = [
        'server.properties',
        'whitelist.json',
        'banned-players.json',
        'banned-ips.json',
        'ops.json'
    ]
    
    # Backup file extensions allowed for download
    ALLOWED_BACKUP_EXTENSIONS = {'.zip', '.tar.gz', '.tar', '.7z'}
    
    # Rate limiting (requests per minute)
    RATE_LIMIT_SERVER_CONTROL = 5
    RATE_LIMIT_CONFIG_SAVE = 10
    RATE_LIMIT_BACKUP_DOWNLOAD = 3
    
    @staticmethod
    def init_app(app):
        pass

class DevelopmentConfig(Config):
    DEBUG = True

class ProductionConfig(Config):
    DEBUG = False
    SESSION_COOKIE_SECURE = True

class TestingConfig(Config):
    TESTING = True
    WTF_CSRF_ENABLED = False

config = {
    'development': DevelopmentConfig,
    'production': ProductionConfig,
    'testing': TestingConfig,
    'default': DevelopmentConfig
}